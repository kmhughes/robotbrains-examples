#!/bin/bash
# /etc/init.d/robotbrainsclouddataclient

### BEGIN INIT INFO
# Provides:          robotbrainscloudataclient
# Required-Start:    $remote_fs $syslog networking dhcpcd
# Required-Stop:     $remote_fs $syslog networking
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: The RobotBrains Cloud Data Client 
# Description:       This service is used to manage a RobotBrains Cloud Data Client
### END INIT INFO

# Use lsb functions for some operations
. /lib/lsb/init-functions

NAME=robotbrainsclouddataclient
DAEMON_USER=root
DAEMON=/home/pi/robotbrainsclouddataclient.py
DAEMON_OPTS=/home/pi/smartspacescloud.yaml
PIDFILE=/var/run/$NAME.pid

case "$1" in 
  start)
    if [ -e $PIDFILE]; then
      status_of_proc -p $PIDFILE $DAEMON "$NAME process" && status="0" || status="$?"
      # If the status is SUCCESS then don't need to start again.
      if [ $status = "0" ]; then
        exit # Exit
      fi
    fi
    # Start the daemon.
    log_daemon_msg "Starting the process" "$NAME"
    # Start the daemon with the help of start-stop-daemon
    # Log the message appropriately
    if start-stop-daemon --start --background --quiet --oknodo --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON -- $DAEMON_OPTS ; then
      log_end_msg 0
    else
      log_end_msg 1
    fi
    ;;
 stop)
  # Stop the daemon.
  if [ -e $PIDFILE ]; then
   status_of_proc -p $PIDFILE $DAEMON "Stopping the $NAME process" && status="0" || status="$?"
   if [ "$status" = 0 ]; then
    start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
    /bin/rm -rf $PIDFILE
   fi
  else
   log_daemon_msg "$NAME process is not running"
   log_end_msg 0
  fi
  ;;
 restart)
  # Restart the daemon.
  $0 stop && sleep 2 && $0 start
  ;;
 status)
  # Check the status of the process.
  if [ -e $PIDFILE ]; then
   status_of_proc -p $PIDFILE $DAEMON "$NAME process" && exit 0 || exit $?
  else
   log_daemon_msg "$NAME Process is not running"
   log_end_msg 0
  fi
  ;;
  *)
    echo "Usage: $0 start|stop|restart|status"
    exit 1
    ;;
esac

exit 0
